version: '3.7'
services:
  fast-api:
    container_name: fast-api
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - ALGORITHM=${ALGORITHM}
      - DB_URL=${DB_URL}
      - RABBIT_URL=${RABBIT_URL}
    ports:
      - "8000:80"
    volumes:
      - ./app/:/code/app
      - ./migrations/:/code/migrations/
    restart: on-failure
    networks:
      - rabbitmq_net

  test:
    container_name: "test-job"
    build:
      context: .
      dockerfile: Dockerfile.test
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - ALGORITHM=${ALGORITHM}
      - DB_URL=${DB_URL}
    volumes:
      - ./app/:/code/app
      - ./tests/:/code/tests

  postgresql3:
    container_name: postgres-db
    image: postgres
    ports:
      - 5432:5432
    env_file:
      - ./.env
    volumes:
      - /var/cache/postgres_data3:/var/lib/postgresql3/data
    networks:
      - rabbitmq_net

  rabbitmq:
    image: "rabbitmq:3-management"
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_PASSWORD=${RABBITMQ_DEFAULT_PASS}
    networks:
      - rabbitmq_net

  celery:
    container_name: "celery-worker"
    build:
      context: ./app/celery
      dockerfile: celery_worker.dockerfile
    environment:
      - RABBIT_URL=${RABBIT_URL}
    restart: always
    depends_on:
      - rabbitmq
    networks:
      - rabbitmq_net

  flower:
    container_name: flower-dashboard
    image: mher/flower:1.2
    environment:
      - CELERY_BROKER_URL=${RABBIT_URL}
    # restart: always
    ports:
      - 5555:5555
    depends_on:
      - celery
    networks:
      - rabbitmq_net

networks:
  rabbitmq_net:
    driver: bridge

    